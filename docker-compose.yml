version: '3.8'

services:
  mev-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: solana-mev-bot
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CONFIG_PATH=/app/config/bot.json
      - WALLET_PATH=/app/config/wallet.json
      - TZ=${TIMEZONE:-UTC}
    
    # Volume mounts for persistent data
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    
    # Port mapping for monitoring API
    ports:
      - "${MONITOR_PORT:-3000}:3000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network configuration
    networks:
      - mev-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: mev-redis
    restart: unless-stopped
    
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    volumes:
      - redis-data:/data
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    networks:
      - mev-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: mev-prometheus
    restart: unless-stopped
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    
    networks:
      - mev-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: mev-grafana
    restart: unless-stopped
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    
    networks:
      - mev-network

# Named volumes for persistent data
volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# Custom network
networks:
  mev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

